version: '3'

services:
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.2.1
    ports:
      - 8083:8083
    depends_on:
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
  
  kafka-init:
    image: wurstmeister/kafka:2.13-2.8.1
    command: ["/bin/bash", "-c", "sleep 5 && kafka-topics.sh --create --topic chair1.bigmachine --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181"]
    depends_on:
      - kafka
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  
  chronograf:
    image: chronograf:latest
    ports:
      - "8888:8888"
    environment:
      CHRONOGRAF_CONFIG_PATH: /etc/chronograf/config.toml
    volumes:
      - ./chronograf:/etc/chronograf
    depends_on:
      - influxdb

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: proki
      INFLUXDB_CONFIG_PATH: /etc/influxdb/influxdb.conf
    volumes:
      - ./influxdb.conf:/etc/influxdb/influxdb.conf

  vector:
    image: timberio/vector:0.36.0-debian
    command: ["--config", "/etc/vector/vector.toml"]
    environment:
      VECTOR_LOG: debug
    volumes:
      - ./vector.toml:/etc/vector/vector.toml
    depends_on:
      - kafka
      - influxdb

