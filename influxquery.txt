# List of experiments
from(bucket: "chair1.bigmachine")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_field"] == "event")
  |> filter(fn: (r) => r._value == "start" or r._value == "stop")
  |> elapsed(unit: 1ns)
  |> filter(fn: (r) => r._value == "stop")
  |> map(fn: (r) => ({start: time(v: int(v: r._time)- r.elapsed), elapsed: r.elapsed / 1000 / 1000, stop: r._time}))



# List experiments with number of samples

getValue = (tables=<-) => {
    extract = tables
        |> findRecord(fn: (key) => true, idx: 0)

    return extract.x
}


from(bucket: "chair1.bigmachine")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_field"] == "event")
  |> filter(fn: (r) => r._value == "start" or r._value == "stop")
  |> elapsed(unit: 1ns)
  |> filter(fn: (r) => r._value == "stop")
  |> map(fn: (r) => ({start: time(v: int(v: r._time)- r.elapsed), elapsed: r.elapsed / 1000 / 1000, stop: r._time}))
  |> map(fn: (r) => ({
    r with
    number_of_samples: from(bucket: "chair1.bigmachine")
        |> range(start: r.start, stop: r.stop)
        |> pivot(rowKey:["_time"], columnKey: ["_field"], valueColumn: "_value")
        |> count(column: "x")
        |> getValue()
  }))
